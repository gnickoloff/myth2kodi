# Example of copying MythTV recordings to a removable drive.
#
# This is not intended for usual processing for a Kodi library
# but as a way to get a nicely named copy of a recording onto
# something like a USB key. Of course, if you are already
# running myth2kodi to add recordings to your Kodi library you
# could just copy the already successfully processed files from
# your Kodi library.
#
# NOTE: If you don't use a different user to your usual media librarian
#       then you'll have to overwrite your usual myth2kodi.conf file
#       when running this. It is important to be sure that MythTV
#       isn't going to run a myth2kodi user job anytime soon. And
#       it is equally important that you remember to put your usual
#       myth2kodi.conf file back in place once you've finished with
#       this temporary mode of operation.
#

#I don't run this as the dedicated media librarian but instead as my
#standard desktop user. This avoids the need to interfere with the 
#media librarian's myth2kodi.conf. That way if MythTV runs a myth2kodi
#user job while the copying is under way it doesn't use the wrong
#myth2kodi.conf file.
Librarian='sknock'

#We're going to 'COPY' MythTV recordings to nice file name.
PROCESS_RECORDING_MODE='COPY'

#We don't want to generate tracking entries because this won't
#be going to out Kodi library.
TRACKING='Disabled'

#We want it ensure it either copies or do nothing:
FailSafeMode='Disabled'

#In case the program we're watching this with can use NFO data but 
#doesn't do Kodi's file name based online lookup of meta-data.
RequiresNFO=1

#We don't want it writing anywhere else, so make sure that all
#target directories are on our external drive. 
#NOTE: If you intend to transfer files larger than 4GB, which
#      is common for HD movies, make sure that your external
#      drive is formatted in a way that supports this (not Fat32).
#      May be able to use something like:
#        getconf FILESIZEBITS "$MoveDir"
#      to handle this programatically.
MoveDir='/run/media/sknock/8DFE-92F3/tv-series'
AlternateMoveDir='/run/media/sknock/8DFE-92F3/tv-series'
PrimaryMovieDir='/run/media/sknock/8DFE-92F3/movies'
AlternateMovieDir='/run/media/sknock/8DFE-92F3/movies'
PrimaryShowDir='/run/media/sknock/8DFE-92F3/shows'
AlternateShowDir='/run/media/sknock/8DFE-92F3/shows'

#These aren't really going to a specific Kodi library, so,
#we don't want all the usual logging and Kodi related stuff:
DailyReport='Disabled'
KODIUpdate='Disabled'
KODIClean='Disabled'
KODINotify='Disabled'



#### Stuff below here is specific to my setup ###
#I also want desktop notifications to go to this user
NotifyUserName="$Librarian"

#The Linux distro I'm using doesn't put /tmp as a tmpfs, but I have
#plenty of RAM and /dev/shm is guaranteed to be tmpfs under Linux.
M2K_TMPDIR='/dev/shm'

#I record movies into a dedicated storage group called Movies
StorageGroupFallback='Enabled'

#Desktop notifications are useful when Kodi isn't permanently running.
Notify='Enabled'

#The Database Pin for the MythTV Database (used in python bindings only)
DBPin=8446

#As I'm regularly developing/debugging, keeping excessive records around
#can be useful, and disk space is cheap.
M2K_DB_LIFE=42
DAILYREPORT_LIFE=42
LOG_LIFE=42

# As I change this regularly, it's convenient to have this here
# even when it is just resetting the same value most of the time.
LOGLEVEL=2
